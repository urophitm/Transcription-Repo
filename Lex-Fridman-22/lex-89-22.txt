 The following is a conversation with Vitalik Buterin, co-creator of an author of the white paper that launched Ethereum and Ether, which is a cryptocurrency that is currently the second largest digital currency after Bitcoin. Ethereum has a lot of interesting technical ideas that are defining the future of blockchain technology, and Vitalik is one of the most brilliant people innovating in the space today. Unlike Satoshi Nakamoto, the unknown person or group that created Bitcoin, Vitalik is very well known, and at a young age is thrust into the limelight as one of the main faces of the technology that may redefine the nature of money in all forms of digital transactions in the 21st century. This is the Artificial Intelligence Podcast. If you enjoy it, subscribe on YouTube, review it with 5 stars in Apple Podcasts, support it on Patreon, or simply connect with me on Twitter, Alex Friedman, spelled F-R-I-D-M-A-N. As usual, I'll do one or two minutes of ads now and never any ads in the middle that can break the flow of the conversation. I hope that works for you and doesn't hurt the listening experience. Look summary of the ads, two sponsors, Masterclass and ExpressVPN. Please consider supporting the podcast by signing up to Masterclass at masterclass.com-lux and getting ExpressVPN at expressvpn.com-luxpod. This show is sponsored by Masterclass. Sign up at masterclass.com-lux to get a discount and support this podcast. When I first heard about Masterclass, I honestly thought it was too good to be true. For $180 a year, you get an all-axis pass to watch courses from experts at the top of their field. To list some of my favorites, Chris Hadfield on space exploration, Neil deGrasse Tyson on scientific thinking and communication will write the creator of sims city and sims on game design. I love that game. Jane Goodall on conservation, Carlos Santana, one of my favorite guitarists on guitar, Gary Kasparov on chess. Obviously, I'm Russian. I love Gary. Daniel Negrano on poker, one of my favorite poker players also feel ivy, gives the course as well. And many, many more. Chris Hadfield explaining how rockets work and the experience of being launched into space alone is worth the money. By way of advice, for me, the key is not to be overwhelmed by the abundance of choice. Pick three courses you want to complete. Watch each all the way through from start to finish. It's not that long, but it's an experience that will stick with you for a long time. I promise. It's easily worth the money. You can watch it on basically any device. Once again, sign up at masterclass.com slash Lex to get a discount and to support this podcast. This show sponsored by ExpressVPN. Download it at expressvpn.com slash Lex pod to get a discount and to support this podcast. I've been using ExpressVPN for many years. I honestly love it. It's easy to use. Press the big power on button and your privacy is protected. And if you like, you can make it look like your location is anywhere else in the world. I might be embossed in now, but I can make it look like I'm in New York, London, Paris or anywhere else. This has a large number of obvious benefits. For example, certainly it allows you to access international versions of streaming websites like the Japanese version of Netflix or the UK version of Hulu. As you probably know, I was born in the Soviet Union. So sadly, given my roots and appreciation of Russian history and culture, my website and the website for this podcast is blocked in Russia. So this is another example where you can use ExpressVPN to access sites like the podcast that are not accessible in your country. ExpressVPN works on any device you can imagine. I use it on Linux, shout out to Ubuntu, Windows, Android, but it's available everywhere else too. Once again, download it at ExpressVPN.com slashlexpod to get a discount and to support this podcast. And now here's my conversation with Vitalik Buterin. So before we talk about the fundamental ideas behind Ethereum, cryptocurrency, perhaps it would be nice to talk about the origin story of Bitcoin and the mystery of Satoshi Nakamoto. You give a talk that started with sort of asking the question, what did Satoshi Nakamoto actually invent? Maybe you could say, who is Satoshi Nakamoto and what did he invent? Sure. Satoshi Nakamoto is the name by which we know the person who originally came up with Bitcoin. So the reason why I say the name by which we know is that this is an anonymous fellow who has shown himself to us only over the internet just by first publishing the white paper for Bitcoin, then really simply original source code for Bitcoin and then talking to the very early Bitcoin community on Bitcoin forums and if interacting with them and helping the project along for a couple of years. And then at some point in late 2010 to early 2011, he disappeared. So Bitcoin is a fairly unique project and how it has this kind of mythical kind of quasi-god like founder who just kind of popped in, did the thing and disappeared and we've somehow just never heard from him again. So in 2008, so the white paper was the first, do you know the white paper was the first time the name would actually appear Satoshi Nakamoto? I don't believe so. So how is it possible that the creator of such an impactful project remains anonymous? That's a tough question. There's no similarity to it in history of technology as far as I'm aware. Yeah. So one possibility is that it's health in me because health in me was kind of also active in the Bitcoin community and as health in me and those two beginning years and how is the health in me maybe? I see it's one of the people in the end of early cypherpunk community. He was a computer scientist. He had computer scientists, cryptographers, people interested in technology, internet freedom, like those kinds of topics. It was the correct that he seemed to have been involved in either the earliest or the first transaction of Bitcoin. Yes. The first transaction of Bitcoin was between Satoshi and Health in me. Do you think he knew who Satoshi was? If he wasn't Satoshi, you probably know. How is it possible to work so closely with people and nevertheless not know anything about their fundamental identity? Is this like a natural sort of characteristic of the internet? If you were to think about it because you and I just met now, there's a depth of knowledge that we now have about each other that's like physical. My vision system is able to recognize you. I can also verify your identity of uniqueness. It's very hard to fake you being you. The internet has a fundamentally different quality to it which is just fascinating. Maybe I can talk to that. This is definitely interesting. I definitely just know a lot of people just by their internet handles. To me, when I think of them, I see their internet handles. One of them has a profile picture of this face that's not quite human with a bunch of psychedelic colors in it. When I visualize that, it's not a natural face. You are the creator of the second, well, he's currently the second most popular cryptocurrency Ethereum. On this topic, if you just stick on Satoshi Nakamoto for a little bit longer, you may be the most qualified person to speak to the psychology of this anonymity that we're talking about. Your identity is known. I've just verified it. From your perspective, what are the benefits in the creative cryptocurrency and then remaining anonymous? If you can psychoanalyze Satoshi Nakamoto, is there something interesting there? Or is it just a peculiar quark of him? It definitely helps create this kind of image of this neutral thing that doesn't belong to anyone. You created a project because you're anonymous and because you also have a disappear or as unfortunately happened to help any of that is him. He ended up dying of a Lugeric disease and he's in the cryogenic freezer now. If you pop in and you created and you're gone and all that's remaining of that whole process is the thing itself, then no one can go and try to interpret any of your other behavior and try to understand, oh, this person wrote this thing in some essay at age 16 where he expressed particular opinions about democracy. Because of that, this project is a statement that's tried to do this specific thing. Instead, it creates this environment where the thing is what you make of it. It doesn't have the, yeah, right. The burden of your other ideas, political thought and so on. Now that we're sitting with you, do you feel the burden of being kind of the face of Ethereum? I mean, there's a very large community of developers, but nevertheless, is there like a burden associated with that? There definitely is. This is definitely a big reason why I've been trying to kind of push for the Ethereum ecosystem to become more decentralized in many ways. I just encourage a lot of, of course, Ethereum work to happen outside of the Ethereum foundation and of expanding the number of people that are making different kinds of decisions, having multiple software limitations instead of one and all of these things. There's a lot of things that I've tried to do to and remove myself as a single point of failure because that is something that a lot of people criticize me for. If you look at the most fundamentally successful open-source projects, it seems that it's like a sad reality when I think about it is it seems to be that one person is a crucial contributor often. If you look at Linus from from for Linux for the kernel, that is possible. I'm definitely not planning to disappear. It's an interesting tension that projects like this kind of desire a single entity and yet they're fundamentally distributed. I don't know if there's something interesting to say about that kind of structure and thinking about the future of cryptocurrency, does there need to be a leader? There's different kinds of leaders. There's dictators who control all the money. There's people who control organizations. There's high priests that just have themselves and their Twitter followers. What kind of leader are you? Would you say? In these days, I actually a bit more in the high priest direction than before. I definitely actually don't do all that much of going around and ordering Ethereum foundation people to do things because I think those things are important. If there's something that I do think is important, I do just to usually say it publicly or just say it to people and quite often projects just going to start doing it. Let's ask the high philosophical question about money. What at the highest level is money? What is money? It's a kind of game and it's a game where we have points. If you have points, there's this one move where you can reduce your points by a number and increase someone else's points by the same number. It's a fair game, hopefully. It's one kind of fair game. For example, you can have other kinds of fair games. You're going to have a game where if I give someone a point and you give someone a point instead of that person getting two points, that person gets four points, and that's also fair. Money is easy to set up and it serves a lot of useful functions and so it just survives in society as a meme for thousands of years. It's useful for the storage of wealth. It's useful for the exchange of value and it's also useful for denominating future payments in the unit of account. A unit of account. What if you look at the history of money in human civilization, just if you're a student of history, how has its role or just the mechanisms of money changed over time in your view, even if we just look at the 20th century before and then leading up to cryptocurrencies, is that something you think about? Yeah, and I think the big thing in the 20th century is we saw a lot more intermediation, I guess. I mean, the first part is end of the move from adding more of different kinds of banking and then we saw the move from end of dollars being backed by gold to dollars being backed by gold that's only redeemable by certain people to dollars, not being backed by anything to, and if this is the way you have a bunch of free floating currencies and then people getting bank accounts and then those things becoming e-locked run ag, people getting accounts with payment processors that have bank accounts. So what do you make of that? This is just fascinating, philosophical idea that money might not be backed by anything. Is that like the fascinating to you that money can exist without being backed by something physical? It definitely is. What do you make of that? How is that possible? Is that stable? If you look at the future of human civilization, is it possible to have money at the large scale at such a hugely productive and rich societies be able to operate successfully without money being backed by anything physical? If you look the interesting thing about the 21st century, especially, is that a lot of the important valuable things are not backed by anything. If you look at tech companies, for example, something like Twitter, you could theoretically imagine that if all of the employees wanted to, they could have come together, they would quit and start working on Twitter 2.0. Then the value of, and just build the exact same product, or possibly build a better product, and then just continue on from there. And the original Twitter would not have people left anymore. There is theoretically code and IP that's owned by the company, but in reality, good programmers could probably rewrite all that stuff in three months. The reason why the thing has value is network effects and coordination problems. Right, Meg? These employees in reality aren't going to switch all at once, and also the users aren't all going to switch at once because it's just difficult for them to switch at once. There is these meta-stable and equal embryo interactions between thousands of millions of people that are actually quite sticky, even though if you try to assume that everyone's a perfectly rational and perfectly slippery spherical cow, they don't seem to exist at all. That's stickiness. Do you have a sense of grasp of the fundamental dynamics, like the physics of that stickiness? It seems to work, and I think some of the cryptocurrency ideas rely on it working. It's a sort of thing that's definitely been economically modeled a lot. One of the kind of analogy of something similar that you often see in textbooks is like, what is a government? Like 80% of people in a country just like tomorrow suddenly had the idea that the laws that are currently the laws in the government that currently is the government, they're just people and some other thing is the government and they just start acting like it. That will become the new reality. The question is, what happens if between 80% or 80% of people start believing that? The thing you see is that if there is one of these switches happening, it's revolution. If you're the first person to join, then you probably don't have the incentive to do that. But then if you're the 50%, percent, out person to join, then suddenly becomes quite safe too. It definitely is the sort of thing that you can try to analyze and understand mathematically. One of the results is that when the switch happens definitely can be chaotic sometimes. Yeah, but still, to me, the idea that the network affects the human beings at a scale like millions, millions can share even the idea of currency, like all agree. I know economics can model it. I'm a skeptic on economic. My favorite sort of field may be recreationally, psychology is trying to understand human behavior. I think sometimes people just pretend that they can have a grasp on human behavior, even though it's such a messy space that all the models that psychology or economics, those different perspectives on human behavior, are difficult to know how much that's wishful thinking and how much it is actually getting to the core of understanding human behavior. But on that idea, what do you think is the role of money in human motivation? So do you think money from an economics perspective, from a psychology perspective, is core to the human desires? Money is definitely very far from the only motivator. It is a big motivator and it's one of the closest things you have to a universal motivator think because ultimately in almost any person in the world, if you ask them to do something, like there'll be more inclines to do it if you also offer some, offer the money, right? And that's, there's definitely many cases where people will do things other than things that maximize how much money they have and that happens all the time. But like, though a lot of those other things are kind of much more specific to, and of who that person is and of where their situation is, the relationship between the motive and the action and these other things. What do you think is the interplay of the other motivator from like Nietzsche in respect of his power? Do you think money equals power? Do you think those are conflicting ideas? Do you think, I mean, that's one of the ideas that decentralized currency, decentralized applications are looking at is who holds the power? Money is definitely a kind of power and there's definitely people who want money because it gives them power and then even if money doesn't seem to and if explicitly be about money, a lot of things that people spend money on are ultimately about and of social status of some kind. So I definitely view those two things as an interplaying and then there's also money as just a way of like measuring how successful you are, I guess, a scoreboard, right? So this kind of gets back to the game. I mean, if you have four billion dollars, then the main benefit you get from going out, well, one of the big benefits you get from going up to six million dollars is that now instead of being below the guy who has five, you're above the guy who has five. So you think money could be kind of in a game of life, it's also a measure of self-worth. It's like how we... It's definitely how a lot of people perceive it. Define ourselves in a hierarchy of society. Yeah, not saying it's kind of a healthy thing that people define their self-worth as money because it's definitely a far from a perfect indicator of how much you value, you provide the society or anything like this. But I definitely think that as a matter of kind of correct practice, so much of people do feel that way. So what does utopia from an economic perspective look like to you? What does the perfect world look like? I guess the economists' utopia would be one where kind of everything is in an incentive aligned in the sense that there aren't kind of conflicts between what satisfies your goals and kind of what is good for everyone in the world as a whole. What do you think that would look like? Does that mean there's still poor people on rich people? Does there still income inequality? Do you think Marxist ideas are strong? Do you think ideas of objectivism, where the market rules is strong? Is there different economic philosophies that just seem to be reflective of what utopia would be? I definitely think that it's existing. Economic philosophy is due end up kind of systematically deviating from the utopia in a lot of ways. One of the big things I talk about, for example, is public goods. Public goods are especially important on the internet, right? The idea is what's kind of money as this game where I lose a few coins and you gain the same number of coins is that this usually happens in a trade where I lose some money. You gain some money, you lose a sandwich and I gain a sandwich. This kind of model works really well when the thing that we're using money to incentivize this kind of private goods, right? Things that you provide to one person or the benefit comes to one person. On the internet especially, but also many, many contacts kind of off the internet, there's just actions that individuals or groups can take where instead of the benefit going to one person, the benefit just goes to many people at the same time and you can't control where the benefit goes to. For example, this podcast, we publish it and when it's published, you don't have any fine grains control over these 38,000 people can watch it and then these others 29,000 people can't. Like once the number goes high enough, then people just copy it and then when I write articles on a blog, then they're just like free for everyone and that stuff's even harder to prevent anyone from copying. So aside from that, things like scientific research for example and even taking more pedestrian examples like climate change mitigation would be a big one. So there's a lot of things in the world where you have these kind of individual actions with an concentrated cost and distributed benefits and money as a point system does not do a good job of encouraging these things. And one of the kind of other things even, I'm like, I kind of tend to actually connect it to crypto, but kind of theoretically outside of it that I work on is this mechanism called quadratic funding. And the way to think about it is, and if imagine a point system where if one person gives coins to one other person, then it works the same way as money. But if multiple people give coins to one person and they do so anonymously, so it's kind of not in consideration for a specific service to that person themselves, then the number of coins received by that person is kind of greater than just the sum of the number of coins that have given by those different people. So the actual formula is you take the square root of the amount that each person gave, then you add all the square roots and then you add a square of the sums, yeah, and then you give that. And the idea here would basically be that if let's say for example, you just started going off and kind of planting a lot of trees, and there's a bunch of people that are really happy that you're planting trees, so they go and all kind of throw a coin your way, then the there is like basically the fact that kind of you get more than the sum, you get this kind of square of sum of these of square roots of these tiny modes is that this actually kind of compensates for the tragedy of the commons, right? And there's even this kind of mathematical proof that it's sort of optimally compensates for it. What is the tragedy of the commons? This is just this idea that like if there is this situation where there's some public good that lots of people benefit from, then no individual person wants to contribute to it, because if they contribute, they'll only get a small part of the benefit from their contribution, but they pay the full cost of their contribution. In which context is this, sorry, what is the term quadratic funding? Quadratic funding, what is the term? Yeah. Like what's in which context is this mechanism useful? So obviously you said to combat the tragedy of the commons, but in which context do you see it as useful as you practice this? Yeah, theoretically public goods in general, right? So like like services like what are we talking about? What's the public good? So within the Ethereum ecosystem, for example, like we've actually tried using this mechanism, I mean, yeah, wrote a couple of articles about us and von Vittalek.ca where I go through some of the most recent rounds and it's been really interesting. Some of the top ones that people supported, there were things like just online user interfaces that make it easier for people to interact with Ethereum. There was a documentation, there were podcasts, there were software and clients, like implementations of the Ethereum protocol, of privacy tools, just like lots of things that are useful to lots of people. When a lot of people are contributing funding a particular entity, and it's really interesting. Is there something special about the quadratic, the summing of the square roots and the second square? Yeah. So another way to think about it is, imagine if N people each give a dollar, then the person gets N squared. Right. And so each individual person's contribution gets multiplied by N, right? Because they have N people. And so that kind of perfectly compensates for the kind of end to one tragedy of the comments. I just wonder if the squared part is off on the mental. No, it is. I'd recommend you go to on Vittalek.ca. I have this article called quadratic payments of primer and highly recommended it, at least my attempt so far, and of exploiting the intuition behind this intuition. So if we could, can we go to the very basic, what is the blockchain, or perhaps we might even start at the Byzantine general's problem, Byzantine fall tolerance in general, that I Bitcoin was taking steps to providing a solution for. So the Byzantine general's problem is this paper that Leslie Lamport published in 1982 where he has a thought experiment where if you have two generals that are kind of camped out on opposite sides of a city, and they're planning when to attack the city, then the question is, and if how could those generals coordinate with each other, and they could send messengers between each other, but those messengers kind of could get sniped by the enemy on the road, some of those messages could end up being traitors, and if things could end up happening. And with just two mess generals, it turns out that there's kind of no solution in a finite number of rounds that guarantees that they will be able to kind of coordinate on the same answer. But then in the case where you have more than two generals, then Leslie Analyze's cases, like are the messages kind of just oral messages are the messages kind of signed messages. So I can give you a sign message and you can pass along that sign message. And the third party gets to verify that I originally made that message. And depending on those different cases, there's kind of different bounds on like given how many generals and how many traitors among those generals and under what conditions you actually can't agree once a launch an attack. So it's actually a big misconception that the Byzantine generals' problem was unsolved. So Leslie Analyze's report solved it. The thing that was unsolved though is that all of these solutions assume that you've already agreed on and have a fixed list of who the generals are. And these generals have to be kind of semi-trust at some extent. They can't just be anonymous people because if they're anonymous, then like the enemy could just be 99% of the generals. So in the 1980s and the 1990s, kind of the general use case for distributed system stuff was more kind of enterprisey stuff where you could kind of assume that you know, you know who the nodes are that are running these kind of computer networks. So if you want to have some kind of decentralized computer network that pretends to be a single computer and that you can kind of do a lot of operations on, then it's made out of these kind of 15 specific computers and we know and of who and where they are. And so we have a good reason to believe that at least 11 of them would be fine. And it could also be within a single system, almost a network of devices, sensors, so on like an airplane and I think like fly systems in general still use these kinds of ideas. Yep, yep. So that's the 80s. That's the 80s and 90s. Now the cypher punks had a different use case in mind, which is that they wanted to create a fully decentralized global provision with currency. And the problem here is that they didn't want any authorities and they didn't even want any kind of privileged list of people. And so now the question is, well, how do you use these techniques to create consensus when you have no way of kind of measuring identities, right? You have no way of kind of determining whether or not some 99% of participants are actually all the same guy. And so the clever solution that Satoshi had, this is kind of going back to that presentation I made at DEFCon a few months ago where I said that the things that Satoshi invented with crypto economics is this really neat idea that you can use economic resources to kind of limit identity, how many identities you can get. And the if there isn't any existing decentralized digital currency, then the only way to do this is with proof of work, right? So with proof of work, the solution is just you publish a solution to a hard mathematical puzzle that takes some kind of clearly calculable amount of computational power to solve, you get an identity. And then you solve five of those puzzles you get five identities. And then these are the identities that we run that can set the cell growth in between. So the proof of work mechanism you just described is like the fundamental idea proposed in the white paper that defines Bitcoin. What's the idea of consensus that we wish to reach? What wise consensus important here? What is consensus? So the goal here in just simple technical terms is to basically kind of wire together a set of a large number of computers in such a way that they kind of pretend to the outside world to be a single computer where that single computer keeps working even if a large portion of the kind of constituent computers that make it up break, it kind of break in arbitrary ways like they could shut off, they could try to actively break a system, they could do lots of mean things. So the reason why the CypherPunks wanted to do this is because they wanted to run one particular program on this virtual computer. And the one particular program that they wanted to run is just a currency system, right? It's a system that just processes a series of transactions and for every transaction, it verifies that the sender has enough coins to pay for the transaction and verifies that the digital signature is correct. And if the checks pass, then it subtracts the coins from one account to the other account roughly. So first of all, the proof of work idea is kind of, I mean, at least to me seems pretty fascinating. It is. It's kind of a revolutionary idea. I mean, is it obvious to come up with that you can use, you can exchange basically computational resources for, for identity? It's, it actually has a pretty long history. It was first proposed at a paper by a McSinfia Dwork and the Nixenay or in 1994, I believe. And the original use case was a combating email spam. So the idea is that if you send an email, you have to send it with the proof of work attached. And like this makes it reasonably cheap to send emails to your friends, but it makes it really expensive to send spam to a million people. Yeah, it's a simple, brilliant idea. So maybe also taking a step back. So what is the role of blockchain in this? What is blockchain? Sure. So the blockchain, my way of thinking about it is that it is this, a system where you have this kind of one virtual computer created by this a bunch of these nodes in the network. And the reason why the term blockchain is used is because the data structure that these systems use that we so far is one where they have different nodes in the network periodically published blocks. And a block is a kind of list of transactions together with a pointer, like a hash of a, yeah, a previous block that it builds on top of. And so you have a series of blocks that that nodes in the network create for each block points to the previous block. And so you have this chain of them. Is fault tolerance mechanism built into the idea of blockchain? Or is there a lot of possibilities of different ways to make sure there's no funny stuff going on? There are indeed a lot of possibilities. So in a kind of just simple architecture as I just described the way the fault tolerance happens is like this, right? So you have a bunch of nodes and they're just happily and evocationally creating blocks, building on top of them, each other's blocks. And let's say you have a kind of one block, we'll call it kind of block one. And then someone else builds another block, honestly, we'll call it block two. Then we have an attacker. And what the attacker tries to do is the attacker tries to revert block two. And the way they revert block two is instead of doing the thing they're supposed to do, which is build a block on top of block two, they're going to build another block on top of block one. So you have block one, which has two children block two and then block two prime. Now this might sometimes even happen by random chance if two nodes in the network just happen to create blocks at the same time. And they know here about each other's things before they create their own. But this also could happen because of an attack. Now if this happens, you have an attack, then the no in the Bitcoin system, the nodes follow the longest chain. So if this attack kind of happened when the original chain had more than two blocks on it, so if it was trying to kind of revert more than more than two blocks, then everyone would just ignore it. And everyone would just keep following the regular chain. And here we have block two and we have block two prime. And so the two are kind of even. And then whatever block, the next block is created on top of, so say block three is now created on top of block two prime, then everyone said agrees that block three is then you had and block two prime is just kind of forgotten. And then everyone just kind of peacefully builds on top of block three and then think it's an use. So how difficult is it to mess with the system? So how, like if we look at the general problem, like how many, what fraction of people who participate in the system have to be bad players in order to mess with it truly? Like, what's your, is there a good number? There is. Well, depending on kind of what your model of the participants is and like what kind of attackers are talking about, it's anywhere between 23.2 and 50%. Of what? Of all of the computing power in the network. Sorry. So 22 and 53 point between 23.2 and 50% and 50% can be compromised. So like once your, once your, your portion of the total computing power in the network goes above the 23.2 level, then there's kind of things that you can mean things that you can potentially do. And as your percentage of the network kind of keeps going up, then the, your ability to do mean things kind of goes higher. And then if you have above 50%, then you can just break everything. So how hard is it to achieve that level? Like it seems that so far historically speaking has been exceptionally difficult. So this is a challenging question. So the economic cost of acquiring that level of stuff from scratch is fairly high. I think it's somewhere in the low billions of dollars. And when you say that stuff, you mean computational resources? Yeah. So specifically specialized hardware and of ASICs that people use to solve these puzzles. So do the mining. Small. Small tangent. So obviously I work a lot in deep learning, would you be using ASICs for that application? And I tend to actually kind of hear that so many of these, you know, sometimes NVIDIA GP users sold out. Uh-huh. Because of the other application. What do you, if you can comment, I don't know if you're familiar or interested in the space, what kind of ASICs, what kind of hardware is generally used these days for to do the actual computation for the proof of work? Sure. So in the case, in Bitcoin and Ethereum are a bit different. So in the case of Bitcoin, there is an algorithm called the SHA-2FD6. It's just a hash function. And so the puzzle is just coming up with a number where the hash of the number is below some threshold. And so because the hash's are designed to be random, you just have to keep on trying different numbers until one works. And the ASICs are just like specialized circuits that contain and if circuits for evaluating this hash over and over again, and you have kind of like millions or billions of these hash evaluators and just stacks on top of each other inside of a box and you just keep on running the box 24, 7. And the ASICs, there's literally specialized hardware designed for this. Yes. And there's a really amazing world. Another tangent, I'll come back to the basics, but does quantum computing throw a wrench into any of this? Very good question. So one, some computers have two main families of algorithms that are relevant to cryptography. One is Shor's algorithm. And Shor's algorithm is one that completely breaks naughtiness of some specific kinds of mathematical problems. So the one that you've probably heard of is it makes it very easy to factor numbers. So figure out kind of what prime factors are that kind of that you need to multiply together to get some number, even if that number is extremely big. Shor's algorithm can also be used to break and look to curve cryptography. It can break like any kind of hidden order groups. It breaks a lot of kind of cryptographic nice things that we're used to. But the good news is that for every kind of major use of things that Shor's algorithm breaks, we already know of quantum proof alternatives. Right. Now, we don't use these quantum proof alternatives yet because in many cases, there are five to ten times what's efficient. But the crypto industry in general kind of knows that this is coming eventually and it's kind of ready to take the head and switch to that stuff when we have to. The second algorithm that is relevant to cryptography is Grover's algorithm. And Grover's algorithm might even be a more familiar to AI people. That's basically usually described as solving search problems. But the idea here is that if you have a problem over the form, find a number that satisfies some property. And if with a classical computer, you need to try and if n times before you find the number, then with a quantum computer, you only need to do square root of n computations. And Grover's could potentially be used for mining, but there's two possibilities here. One is that Grover's could be used for mining and whoever creates the first working quantum computer that could do Grover's will just mine way faster than everyone else and we'll see another round of what we saw when A6 came out, which is the new hardware just kind of dominated the old stuff. And then eventually it switched to a new equilibrium. But by the way, way faster, not exponentially faster, quadratically faster, which is not sort of it's not game changing, I would say. It's like A6, like you said, it would be. Exactly. So it would not necessarily break proof of work as of this. That's right. Yeah. Now, the other kind of possible world, right, is that quantum computers have a lot of overhead. There's a lot of and a couple of accident involved in maintaining quantum states. And there's also as we've been realizing recently, making quantum computers actually work requires a quantum error correction, which requires kind of a thousand real qubits, or a logical qubit. And so there's the very real possibility that the overhead of running a quantum computer will be higher than the speed up you get with Grover's, which would be kind of sad, but which would also mean that given proof of work, we'll just keep working fine. So that beautifully put. So proof of work is the core idea of Bitcoin. Is there other core ideas before we kind of take a step towards the origin story and ideas of Ethereum? Is there other stuff that were key to the white paper of Bitcoin? There's proof of work and then there's just the cryptography, just kind of public keys and signatures that are used to verify transactions. Those two are the big things. So then what is the origin story, maybe the human side, but also the technical side of Ethereum? Sure. So I joined the Bitcoin community in 2011. They started by just writing. I first wrote for this sort of online thing called Bitcoin Weekly. Then I started writing for Bitcoin magazine. Sorry to interrupt. Do you have this funny kind of story, true or not, is that your dissolution by the downsides of centralized control from your experience with wow, a world of our craft. Is this true or you're just being witty? I mean, the event is true of the fact that that's the reason I do decentralization is witty. Maybe just a small tangent. Have you always had a skepticism of centralized control? Is that sort of a degree? Has that feeling evolved over time or has it just always been a core feeling that decentralized control is the future of our human society? It's definitely been something that felt very attractive to me ever since I could have heard that such a thing is impossible, even. Yeah. So great. So you joined the Bitcoin community in 2011. You said you began writing. So what's next? Started writing, moved from high school to university halfway in between that and spent a year in university. Then at the end of that year, I dropped out to do Bitcoin things full time. And this was a combination of continuing to write Bitcoin magazine, but also increasingly work on software projects. And I traveled around the world for about six months and just going to different Bitcoin communities like I went to first and you hamster and Spain, other European places, Israel and San Francisco. And along the way, I've met a lot of other people that are working on different Bitcoin projects. And when I was in Israel, there were some kind of very smart teams there that were working on ideas that people were starting to kind of call Bitcoin 2.0. So one of these were scullard coins, which is basically saying that, hey, let's not just use the blockchain for Bitcoin, but let's also like, I had an issue, other kinds of assets on it. And then there was a protocol called master coin that supported issuing assets, but also supported many other things like financial contracts, like domain name registration, and a lot of different things together. And I spent some time working with these teams, and I quickly kind of realized that this master coin protocol could be improved by kind of generalizing it more. So the analogy I use is that the master coin protocol was like this with Sarmina if you have 25 different transactions types through 25 different applications. But what I realized is that you can replace a bunch of them with things that are more general purpose. So one of them was that you can replace like three transactions types for three types of financial contracts with a generic transaction type for a financial contract that just wants you to specify a mathematical formula for kind of how much money each side gets. By the way, the small pause, what's, you say financial contract, just the terminology, what is the contract? What's a financial contract? So this is just generally an agreement where kind of either one or two parties kind of put collateral kind of in. And then they depending on kind of certain conditions like this could involve prices of assets, this could involve different, the actions of the two parties could involve other things. They kind of get a different amount of assets out that just depend on things that happened. So a contract is really a financial contract as at the core, it's the core interactive element of a financial system. Yeah, there's many different kinds of financial contracts. There's things like options where you kind of give someone the right to buy a thing that you have for some specific price for some period of time. There's contracts for difference where you basically are kind of making a bet that says like for every dollar this thing goes up, I'll give you seven dollars or for every dollar that thing goes down, you give me seven dollars or something like that. But the main idea that these contracts have to be enforced and trusted them. Yes, exactly. You have to trust that they will work out in a system where nobody can be trusted. Yes. This is such a beautiful complicated system. Okay, so you are seeking to kind of generalize this basic framework of contracts. So what is that in tail? So what technically are the steps to creating Ethereum? Sure. So I guess just kind of continue a bit with this master coin story. So started by a hand of giving ideas for how to generalize the thing. And eventually this turned into a much more kind of fully flush proposal that just says, hey, how about you scrap all your futures and instead you just put in this programming language. And I gave this idea to them and their response was something like, hey, this is great, but this seems complicated and this seems like something that we're not going to be able to put on to our roadmap for a while. And my response to this was like, wait, do you not realize how our evolutionary this is? Well, I'll just go do it myself. And then I was the name of the programming language. I just called it ultimate scripting. Great. So then I kind of went through a couple more rounds of iteration and then the idea for Ethereum itself started to form. And the idea here is that you just have a blockchain where the core unit of the thing is what we call contracts. It's these and if accounts that can hold assets and they have their own internal memory, but that are controlled by a piece of code. And so if I send some ether to a contract, the only thing that can determine where that kind of ether, the currency inside Ethereum might have goes after that is the code of that contract itself. And so basically kind of sending assets to computer programs becomes this kind of paradigm for creating these kind of a green self executing agreements. Self executing as so cool the code is sort of part of this contract. So that's what's meant by smart contracts. Yeah. So how hard was it to build this kind of thing? Harder than expected. And originally I actually thought that this would be a thing that I would kind of casually work on for a couple of months, publish and then go back to university. Then I released it and a bunch of people or I released a white paper. White paper, the idea is there. The white paper. A whole bunch of people came in offering to how about a huge number of people and have expressed interest. And this was something that was totally not expecting. And then I kind of realized that this would be something that's kind of much bigger than I had ever thought that it would be. And then we started on this kind of much longer development slog of making something that would have lifted up to this sort of much higher level of expectations. What are some of the, is it fundamental like software engineering challenges? It was. Is there social? Okay, so there's social. So, what are the biggest interesting challenges that you've learned about human civilization and in software engineering through this process? So I guess one of the challenges for me is that like I'm one of the kind of apparently unusual geek schools and have never treated with anything but kindness in school. And so when I got into crypto, I kind of expected everyone would just kind of be the same, kind of altruistic and nice in that same way. But the algorithm that I used for finding co-founders for this thing was not very good. It was a literally one computer scientist called the greedy algorithm. That's the first 15 people who applied back offering to help kind of other co-founders. Oh, you mean like literally the people that form, will form the founders, co-founders of the community, the algorithm. I like how you call it the algorithm. And so what happened was that these, like especially as the project got really big, like they started to be a lot of this kind of infighting and there were a lot of, like I wanted the thing to be a nonprofit and some of them wanted to be a for-profit. And then there started to be people who were just kind of totally unable to work with each other. There were people that were kind of trying to get an advantage for themselves in a lot of different ways. And this just about six months later led to this big governance crisis. And then we got a reshuffled leadership a bit. And then the project kept on going. Then nine months later there was another governance crisis. And then there was a third governance crisis. So is there a way to, if you're looking at the human side of things, is there a way to optimize this aspect of the cryptocurrency world? It seems that there is, from my perspective, there's a lot of different characters and personalities and egos. And like you said, I don't know. I also like to think that most of the world, mostly people in the world are well-intentioned. But the way those intentions are realized, maybe perhaps come off as negative. Is there a hopeful message here about creating a governance structure for cryptocurrency that, where everyone gets along? And after about four rounds of reshuffle, I think we've actually come up with something that seems to be pretty stable and happy. And I think, I mean, I definitely do think that most people are well-intentioned. I just think that one of the reasons why I like decentralization is just because there's like this thing about power, where power attracts people with egos. And so that just allows us a very small percentage of people to just ruin so many things. You think ego has a use, like is ego always bad? It seems like some of us does. Well, then the Ethereum research team, I feel like we've found a lot of very good people that are just primarily just interested in things for the technology. And things seem to just generally be going quite well. Yeah, when you're when the focus and the passion is in the tech. So that's the human side of things. The technology side, like what have you learned, what have been the biggest challenges of bringing Ethereum to life on the technology side? So I think first of all, just, you know, there's like the first of all software developments, which is that when someone gives you a timetable, I was switched to unit of time to the next largest unit of time and had one. And we basically fell victim to that. And so instead of taking like three months and ended up taking like 20 months to watch the thing. And that was just I think underestimating the sheer technical complexity of the thing. There are research challenges. Like so, for example, one of the things that we've been saying from the start that we would do one is switch from proof of work to proof of stake or proof of stake is this alternative consent to mechanism where instead of having to waste a lot of computing power on solving these mathematical possible said, don't mean anything. You kind of prove that you have access to coins inside of the system. And this then it gives you some level of participation in the consensus. Can you maybe elaborate on that a little bit? I understand the idea of proof of work. I know that a lot of people say that the idea of proof of stake is really appealing. Can you maybe linger on it a longer, explain what it is? Sure. So basically the idea is like, if I kind of lock up 100 coins, then I turn that into a kind of quote virtual minor and the system itself, I know automatically it randomly assigns that in a virtual minor is the right to create blocks at particular intervals. And then if someone else has 200 coins and they walk and lock those 200 coins, then they get a kind of twice as big virtual minor, they'll be able to create blocks twice as often. So it tries to kind of do similar things to proof of work, except instead of the thing and of a great limiting your participation being your ability to crank out solutions to kind of hash challenges. The thing that really limits your participation is kind of how much coins you're kind of locking into this mechanism. Okay, so that limited participation doesn't require you to run a lot of compute. Does that mean that the richer you are? So rich people are more like their identities more. Right. And this stable. Yeah. Very fibrillary. Or whatever the right terminology is. Right. Definitely a copied critique. I think my usual answer to this is that proof of work is even more of that kind of system. Yes, exactly. Yeah. I didn't mean it. And that's the criticism. I think you're exactly right. That's equivalent. The proof of work is the same kind of thing. But in the proof of work, you have to also use physical resources. Yes. And burn computers and burn trees and all of that stuff. Is there a way to mess with the system over the proof of proof of stake? There is, but you will once again need to have a very large portion of all the coins that are locked in the system to do anything bad. Got it. Yeah. And just that maybe take a small change in one of the criticisms of cryptocurrencies, the fact that I guess for the proof of work mechanism, you have to use so much energy in the world. Yes. Is one of the motivations of proof of stake is to move away from this? Definitely. Like what's your sense of that? Maybe I'm just under informed. Is there like legitimately environmental impact from this? Yeah. So the latest thing was that Bitcoin consumed as much energy as the country of Austria or something like that. Yeah. And then Ethereum is like right now, maybe only like half an order of magnitude smaller than Bitcoin. I've heard you talk about Ethereum 2.0. So what's the dream of Ethereum 2.0? What's the status of proof of stake as a mechanism that Ethereum moves towards? And also how do you move to a different mechanism of consensus within a cryptocurrency? So Ethereum 2.0 is a collection of major upgrades that we've wanted to do to Ethereum for quite some time. The two big ones, one is proof of stake and the other is we call sharding. Sharding solves another problem with blockchains, which is scalability. And what sharding does is it basically says instead of every participant in the net work having to personally download and verify every transaction, every participant in the network only downloads and verifies a small portion of transactions. And then you kind of randomly distribute who gets how much work. And because the distribution is random, it still has the property that you need a large portion of the entire network to corrupt what's going on inside of any shard. But the system is still in a very redundant and very secure. That's brilliant. How hard is that to implement and how hard is proof of stake to implement? Like on a technical level, software level. Proof of stake and sharding are both challenging. I'd say sharding is a bit more challenging. The reason is that proof of stake is kind of just a change to the how the consensus layer works. Sharding does both that, but it's also a change to the networking layer. The reason is that sharding is kind of pointless if at the networking layer, you still do what you do today, which is you kind of gossip everything, which means that if someone publishes something every other node and the client hears it from on the networking layer. And so instead, we have to have enough subnetworks and the ability to quickly switch between subnetworks and have the subnetworks talk to each other. And this is all doable, but it's a more complex architecture. It's definitely the sort of thing that hasn't not yet been done in cryptocurrency. So most of the networking layer in cryptocurrency is your shouting, your broadcast messages. And this is more like ad hoc networks. Yeah, you're shouting within small work groups. Small group, but you have like a bunch of subnet, like exactly. You have to switch between, oh man, I'd love to see that. So it's a beautiful idea. So from a graphic perspective, but just the software that like who's responsible is the Ethereum project, like the people involved, would they be implementing? Like what's the actual, you know, this is like legit software engineering. Who, like how does that work? How do people collaborate, build that kind of project? Is this like almost like is there a software engineering lead? Is there is a legit almost like large scale open source project? There is. Yeah. We have someone named Danny Ryan on our team who has just been brilliant and great all around. And he is a kind of day facto kind of development coordinator, I guess. It's like you have to invent job titles for this stuff. The reason is that like we also have this unique kind of organizational structure where the Ethereum foundation itself and of does research in house. But then the actual implementation is done by independent teams that are separate companies and they're located all around the world and fun places like Australia. And so you kind of just need a bunch of and almost non-stop cat hurting to just keep getting these people to talk to each other and implement this back, make sure that everyone agrees on what's going on and how to interpret different things. So how far into the future are we from these two mechanisms in Ethereum 2.0? So it's just another timeline keeping in mind the previous comments you made about the sort of general curse of software projects. So Ethereum 2.0 is split into three phases. So phase zero just creates a proof stake network and it's actually separate from kind of proof of the proof of work network at the beginning just to kind of give it time to grow and improve itself. If people get to choose site and drop the people get to choose I guess which they get to choose to move over if they want to. Then phase one adds sharding but it only adds sharding of data storage and not sharding of computation. And then after that there is kind of the merger phase which is where the accounts kind of smart contracts like all of the activity on the existing eth one system just kind of gets cut and pasted into you to and then the proof of work chain gets forgotten and then and things all the things that were living there before just kind of continue living inside of the proof stake system. So for timelines phase zero has been a kind of almost fully implemented and now it's just a matter of a whole bunch of security auditing and testing. My own experiences that right now it feels like we're at about a phase comparable to when we were doing the original Ethereum launch when we were maybe about four months away from launch. So that's just a hunch then again. That's just a hunch yeah. So how you know it took it took like over a decade for people to move from Python to Python 3. How do you see the move from like this phase zero of for different concepts and mechanism. Do you see there being a drastic phase shift in people just kind of jumping to this better mechanism. So in phase zero I don't expect too many people to do much because in phase zero and phase one the new chain the get a deliberately enough doesn't have too much functionality turned on. It's there just like if you want to be a proof of stake validator you can get things started if you want to store data for other blockchain applications you can get started. But existing applications will largely keep a living on East one and then when the merger happens then the merger is a operation that happens all at once. So that's one of the benefits of a consensus system that on the one hand you have to coordinate the upgrade but on the other hand the upgrade can be coordinated. So what's cash per FFG. By the way. So the graph of G is the consensus algorithm that we are using for a proof of stake. Is there something interesting specific about cash per FFG like some beautiful aspect of it that there is so cash per FFG combines together kind of two different schools of a consent cell growth of design. So the general two different schools of the design are right one is 50% fault tolerant but dependent on network synchrony. So 50% fault tolerant but it did to tolerate up to 50% of faults but not more but it depends on an assumption that all of the nodes can talk talk to each other within some an implemented period of time like if I send a message you'll receive it within a few seconds. And the second of school is 33% fault tolerant but safe under a synchrony which means that if we agree on something then that thing is finalized and even if the network goes horribly wonky the second after that thing is finalized there's no way to revert that thing. And that's fascinating how you would make that happen. It's definitely quite clever. I recommend the cash per FFG paper if you just search like archive as it like ARXIV cash per FFG it's that's an archive the papers an archive. Yeah. Yeah. That's really self-and-devirtual Griffith. That's awesome. I take a small tangent. This idea of just putting out white papers and papers and putting them on archive and just putting them publicly is that is that at the core is that a necessary component of trick to currencies that the tradition started with Satoshi Nakamoto. What do you make of it? What do you make of the future of that kind of sharing of ideas? I guess so. Yeah. It's definitely something that's kind of mandatory for crypto because crypto is all about making systems where you don't have to trust the operators to trust that the thing works. And so if anything behind our system works is closed sourced and that kind of kills the point. And so there is the kind of a sense in which the funds about all properties of the category of the thing which might be able to just kind of forces openness, but also openness just has proven to be a really great way to collaborate. And there's actually a lot of innovation and academic collaboration that's just kind of happened at Hawk in the crypto space the last few years. So like for example, we have this forum called the E3 Search that's like ETH or ESER and then .CH. And there we publish kind of just ideas in a form that's kind of half formal. Like it's halfway in between. Like it's kind of a text right up and then you can have math in it, but it's often out of much shorter than a paper. And it turns out that the great majority of new ideas, like they're just kind of fairly small nuggets that you can explain in like five to ten lines and they don't really need to hold format. Yeah, exactly. They don't require the kind of like ten pages of an affiliate. So introduction, conclusion is not needed. Yeah. And so instead you just kind of publish the idea and then the people who came up with comments on it. That's brilliant. Yeah, that has been great for us. I think I interrupted you. Was there something else on CastBraph. I just kind of combines together these two schools. And so basically it creates this system where if you have more than 50% that are honest, then you have a network synchrony than the thing kind of goes as a chain. But then if network synchrony fails, then kind of the last few blocks in the chain might kind of get replaced. But anything that was finalized by this kind of more synchronous process gets, can't be reverted. And so you essentially get a kind of best of both worlds between those two bottles. Okay. So I know what I'm doing to them. You're reading the CastBraph.g paper. Apologies for the romanticized question, but what do you are some or the most beautiful idea in the world of Ethereum? Just something surprising, something beautiful, something powerful. Yeah. I mean, I think the fact that money can just emerge out of a database. If enough people believe in it, I think it's definitely one of those things that's up there. I think one of the things that I really love about Ethereum is also this concept of composability. So this is the idea that if I build an application on top of Ethereum, then you can build an application that talks to my application. And you don't even need my permission. You don't even need to talk to me. So one really fun example of this is there was this kind of game on Ethereum called Crypto Girides, the just involved kind of breeding digital cats. And someone else created a game called Crypto Dragons, where the way you play Crypto Dragons is you have a dragon and you have to feed in Crypto Kitties. And they just created the whole thing just like as an Ethereum contract that you would send these tokens that are defined by this other Ethereum contract. And for the interoperability to happen, the projects don't really need to talk to each other. You just kind of interface with the existing program. So it's arbitrarily composable in this kind of way. So you have different groups that can be working. So you could see it scaling to just outside of dragons and kitties. You could build entire ecosystems of software. Yeah. Especially in the decentralized finance space that's been popping up the last two years, there has been a huge amount of really interesting things happen as a result of this. Is it a particular kind of like financial applications kind of thing? Yeah, I mean, there's like stable coins. So this is kind of tokens retain value equal to $1, but they're kind of backed by cryptocurrency. Then there's decentralized exchanges. So as far as decentralized exchanges goes, there's this really interesting construction that has existed for about one and a half years now called uniswap. So what uniswap is it's a smart contract that holds balances of two tokens. We'll call them token A and token B. And it maintains an invariant that the balance of token A multiplied by the balance of token B has to equal the same value. And so the way that you trade against the thing is basically like you have this kind of curve, you know, like X times Y equals K. And yeah, before you trade, it's at some points on the curve after you trade, just like pick some different any other points on the curve. And then whatever the delta X is, that's the amount of A tokens you provide, whatever the delta Y is, that's the amount of B tokens you get or vice versa. And that's just and then kind of the slope at the current points on the curve. And it is the price. And so that just is the whole thing. And that just allows you to have this exchange for tokens. And even if there's very few participants and the whole thing is just like so simple. And it's just very easy to set up, very easy to participate in. And it just provides so much value to people. And the fundamental, the distributed application infrastructure allows that somehow. Yes. So this is a smart contract meeting. This is all a computer program that's just running Ethereum. Smart contracts too are just fascinating. They are. Okay. Do you think cryptocurrency may become the main currency in the world one day? So what do you think we're headed in terms of the role of currency, the structure, type of currency in the world? And I definitely expect the outcurrency is to continue to exist and get to be strong. And I definitely expect kind of fiat currencies to also digitize it their own way over the next couple of decades. What's fiat currency, by the way? Oh, just like things like US dollars and like dollars and euros and yet and these other things. And they're sort of backed by governments. Yes. And I also expect a kind of cryptocurrency is to play this kind of important role in just making sure that people always have an alternative if fiat currency start breaking. So if you're in some very high inflation place like Venezuela, for example, or if you're like country, just kind of gets cut off from, like, cut off from other financial systems because of like something the banks do. I give any kind of if there's even like some major trade disruption or something worse happens, then like cryptocurrencies are the sort of thing that just because of their kind of global neutrality, they're just then always there and you can keep using them. It's interesting that you're quite humble about the possibilities as a future of cryptocurrency. You don't think there's a possible future where it becomes the main set of currency because it feels like fiat. It feels like the centralized control by governments of currencies limiting somehow, maybe in my naive utopian view of the world. It's definitely very possible. I think for cryptocurrencies being the main form of value to work well, you do need to have some much more price stability than they have today. There are now stable coins and there are kind of cryptocurrencies that try to be more stable than existing things like Bitcoin and Ether, but that just is to me the kind of the main challenge. Do you think that's a characteristic of just just being the early days in such young concept? 10 years is nothing in the history of money. I think it's a combination of two things. One is it's still early days, but the other is a kind of more durable and economic problem, which is that demand for currency is volatile because of recessions, booms, changes to technology, lots of things and if people demand for how much currency they want to hold changes. If you have a currency that has a fixed supply, then the change in demand has to be entirely expressed as a change in value of the currency. What that means is that the volatility of demand becomes entirely translated into volatility in a kind of price of things that are omitted in that currency. If you have a currency where instead the supply can change and so the supply can go up when there's words of man, then you have the supply and have absorbing more of that volatility. The price of the currency, what absorb lots of the volatility. On that topic, so Bitcoin does have a limited supply, a specific fixed supply. What's the idea in Ethereum doesn't, but can you clarify? Just in the comments you just made, is Ethereum qualify to the kind of currency that you're talking about and being flexible in the supply? Just a bit more flexible, but the thing that you would really want is something that's specifically flexible in response to how valuable the currency is. I'd recommend you look at stable coins as well, so things like die, for example. Can you spell that? D.A.I. What's stable coins? Is it a type of cryptocurrency? It is a type of cryptocurrency. It's a type of cryptocurrency that's issued by a smart contract, one of these Ethereum computer programs, where the smart contract holds a bunch of ether and then it basically, that people deposit and then it issues die and the reason why people deposit is because they want to go high leverage on the ether. It pairs these two sets of users, one that wants stability and one that wants extra risk together with each other. It basically creates one set of participants, a guarantee that they have this asset that can be a leader converted back into ether, but an expensive way out of the $1 rate. It has some kind of stabilizing network effects. It has many kinds of stabilizing mechanisms in it. That's fascinating. Okay. This world is awesome. It's just from a scientific perspective, it's an awesome world. I often don't see from an outsider's perspective, what I often see is kind of maybe hype and a little bit if I may say so like shaltanism and you don't often see, at least from my outsider's perspective, the beautiful science of it and the engineering of it. Maybe is there a comment you can make of who to follow, how to learn about this world without being interrupted by the shaltans and the hype people in this space? I think you do need to just know the specific kind of people to follow. There's all the kind of the cryptographers and the researchers and there's just even just the Ethereum research crew, myself and like Danny just and none of the other people and then if the academic cryptographers and I came before this today was at Stanford and Stanford has the Center for watching research and of Dan Bonne, this is a really famous and great cryptographer running it and there's a lot of other people there and there's people working on zero knowledge proofs for example. Zuko from ZCash is a head of one other person that I get respect. So if you follow the technical, just crawl along that. Yeah, yeah, you just start with a theory and group and then look at the academics, Dave Bonne and so on and then just cautiously expand the network of people you follow. Yeah, exactly and like if someone seems to self-promotion all then just like remove them. Is there books that are, so there's these white papers and we just discussed about ideas being condensed into really small parts. Is there books that are emerging that are kind of good, introductory material for historical ones? And there's like Nathaniel Popper's digital gold, which is just about the history of Bitcoin. There's like one and then Matthew Lysing announced that there's one about the history of Ethereum. For technical ones and there's Andrea Sensen, Opel, SS Mastery, Ethereum. Great. So let me ask you sort of sorry to pull back to the idea of governments and decentralized currency. There's a tension between decentralization of currency and the power of nations, the power of governments. What's your sense about that tension? Is there some rule for regulation of currency? Is government the enemy of digital currency, of distributed currency, or can they be cautious friends? I mean, I think one thing that people forget is that it's clearly not entirely an enemy because I think if there hadn't been so much government regulation on the kind of centralized digital currency, is that we'd be seeing people like Google and Facebook and Twitter are just kind of issuing them left and right. And then if that was the case, then decentralized currencies would still appeal to some people, but they definitely would appeal to people than today. So even in that sense, I think it's clearly been kind of more of a help, and have set the stage for the existence of the sector in some ways. But also, and I think some of both, there's definitely things that governments can do in some cases have done to hurt the spread of growth of blockchains. There's things that they've done to help. In some cases, definitely done a good job of going after fraudulent projects, and going after some of the projects that have some of the craziest and most misleading marketing. There's also the possibility that governments will end up using blockchains for a lot of different things. The governments do a lot more than just regulating, but there is also they have the identity of records and they have property registries, even their own currency is like secure lots of different kinds of things that they're operating. And there's even blockchain applications in a lot of those. Yeah, and they can leverage technology to do a lot of good for our societies. It is a little unfortunate that governments often lag behind in terms of their acceptance and leverage of technology. If you look at the autonomous vehicle space, AI in general, there are a few years behind. It'd be nice to help them catch up. That's always ongoing problem. You met Vladimir Putin to discuss the centralized currency here. You're born in where we born? Columbus. It's a city about 115 kilometers south of Moscow in Russia. Yes. Yeah, I grew up in Moscow. I mean, that's Vladimir Putin is a central figure in this part of the world. So what was that like meeting him? What was that experience like? He's taller in photos than in person. Yeah, that's right. He's five, seven, I think, five, eight, maybe. Yeah. And unfortunately, we didn't actually kind of have too much of a chance to talk to him like, I'm an interesting him for about one minute at the end of this meeting. And I didn't get a chance to see a lot of some of the other end of government ministers and a key recommended some. And some of them are actually interested in trying to use like blockchains to like for various government use cases, the end of a limited corruption and other things. And I have it's hard to tell from one conversation kind of what things are genuine and what things are just like, oh, blockchain is cool. Let's do blockchain. Right. But you know, when I listen to like Barack Obama talk about artificial intelligence, there's certain things they hear where, okay, so he might not be an expert in AI, but he know he like actually studied it carefully enough to think about it. Like he can turn a lot like, even if he's just reading a Wikipedia page, like he really thought about what this technology means. Did you get a sense that Putin or some of the ministers like thought about blockchain, like thought about the fundamentals and technology, like understand it intuitively, or they too old school to try to grasp it. Summer old school, summer more new school, it depends. It's definitely like depends on who you talk to. I mean, that's an open question for me with Putin because Putin has said that. I don't know, and this is that I've only talked to him for about one minute. But sometimes you can pick up sort of insights. As a quick comment, they're about, maybe you can correct me on this, but there are about 3,000 cryptocurrencies being actively traded. Yes. And Ethereum is one of, you know, a lot of people believe that there will be the main crypto cars. I think Bitcoin is currently still the main crypto cars, but Ethereum very likely might become that the main one. Is this kind of diversity good in the crypto world? Do you see it sticking around? Should there be a winner? Should there be some consensus globally around Bitcoin or around Ethereum? What's your sense? I definitely think the diversity is good. And I definitely think also that there's probably too many people trying to make separate blockchains out of right now. The numbers should definitely greater than one and probably greater than two or even five. Not 3,000. Not 3,000. Yeah. And also not even like 40 high quality platforms that try to do the same thing. And there's definitely this range from just like one person who just like wrongly thinks that you can create a cryptocurrency in like 12 hours and doesn't even think about kind of the community aspects of maintaining it, going to people actually trying, but only creating a really tiny one to like scammers, to people making something that's actually successful. And then there's a lot of different categories of blockchain and project in terms of what it's trying to do and what applications it's for. And I think the experimentation is definitely healthy. If you look at the two worlds, it might be a little bit disjoints, but the distributed applications, crypto currency, and then the world of artificial intelligence, do you see there's some overlap between these worlds that both worry about centralized control? Is there some overlap that's interesting that you think about? Do you think about AI much? Yeah. I think definitely had thought about things like the AI and if control problems and align the problems and all of those things. Do you worry about the existential threat of AI? It's definitely one of the things I worry about. They think block, there's a lot of kind of common challenges because in both cases, what you're ultimately trying to do is you're trying to kind of get a simple system to direct a more complex system. Like in the case of these strong AI is the idea would be that the simple system is people and the complex system is whatever thing the people end up and if I'm unleashing on to the universe that will hopefully be a great thing. And in the case of blockchains and of the complex, well, the simple thing is the algorithm, which is a piece of static and fully open source code and the more complex thing is just all of the different possible and if human actors and of the strategy is that they might end up used to participate in the network. Do you think about your mortality? Like what you hope to accomplish in your life? Oh, I definitely think about ending my own mortality. So that's if I gave you the option to live forever, would you? Depends a lot on what the fine bridge is. But it, I mean, you know, if it's one of those things where I'm going to be kind of like floating through up to space for 10 to the 75 years, then no. If it's forever worth of end of having, you know, of fulfilling life with, and if meaning, like with friends to spend the time with, with kind of meaningful challenges to explore and an interesting thing to be working on, then I think the absolute way. That's beautifully put live forever. But you'd have to check the fine print. I think there's no better way to end it. Vitalik, thank you so much for talking to us. So exciting to follow your work. Oh, my goodness. And thank you for creating a revolutionary idea and sticking with it and building it out and doing some incredible engineering work. And thanks for talking today. Thank you. Thanks for listening to this conversation with Vitalik Buterin. And thank you to our sponsors ExpressVPN and masterclass. Please consider supporting the podcast by sending up to masterclass at masterclass.com slash Lex and getting ExpressVPN at expressvpn.com slash Lex pod. If you enjoy this podcast, subscribe on YouTube, review it with five stars and Apple podcasts, support it on Patreon or simply connect with me on Twitter at Lex Friedman. And now let me leave you with some words from Vitalik Buterin. The thing that I often ask startups on top of Ethereum is, can you please tell me why using Ethereum blockchain is better than using Excel? And if they can come up with a good answer, that's when you know you got something really interesting. Thank you for listening and hope to see you next time.