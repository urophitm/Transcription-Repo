The following is a conversation with George Hots, aka GeoHot, his second time on the podcast. He's the founder of Kama AI, an autonomous and semi-autonomous vehicle technology company that seeks to be to test the autopilot what Android is to the iOS. They sell the Kama 2 device for $1,000 that will installed in many of their supported cars can keep the vehicle centered in the lane even when there are no lane markings. It includes driver sensing that ensures that the driver's eyes are on the road. As you may know, I'm a big fan of driver sensing. I do believe Tesla autopilot and others should definitely include it in their sensor suite. Also, I'm a fan of Android and a big fan of George, many reasons, including his non-linear out-of-the-box brilliance, and the fact that he's a superstar programmer of a very different style than myself. Styles make fights, and styles make conversations. So I really enjoyed this chat, and I'm sure we'll talk many more times on this podcast. Quick mention of a sponsor followed by some thoughts related to the episode. First is ForSigmatic, the maker of delicious mushroom coffee. Second is the coding digital, a podcast on tech and entrepreneurship that I listen to and enjoy. And finally, ExpressVPN, the VPN I've used for many years to protect my privacy on the internet. Please check out the sponsors in the description to get a discount and to support this podcast. As a side note, let me say that my work at MIT on autonomous and semi-autonomous vehicles led me to study the human side of autonomy enough to understand that it's a beautifully complicated and interesting problem space, much richer than what can be studied in the lab. In that sense, the data that comes with AI, Tesla autopilot, and perhaps others like Cadillac Supercruiser collecting gives us a chance to understand how we can design safe semi-autonomous vehicles for real human beings in real world conditions. I think this requires bold innovation and a serious exploration of the first principles of the driving task itself. If you enjoyed this thing, subscribe by YouTube, review it with five stars and up a podcast, follow on Spotify, support on Patreon, or connect with me on Twitter, at Lex Friedman. And now, here's my conversation with George Hots. So last time we started talking about the simulation, this time let me ask you, do you think there's intelligent life out there in the universe? I've always maintained my answer to the Fermi paradox. I think there has been intelligent life elsewhere in the universe. So intelligent civilizations existed, but they've blown themselves up. So your general intuition is that intelligent civilizations quickly, like there's that parameter in the Drake equation, your sense is they don't last very long. How are we doing on that? Like have we lasted pretty good? Oh no, we do. Oh yeah. I mean, not quite yet. Well, it's good. It's telling you as you're Kowski, the IQ required to destroy the world falls by one point every year. Okay. So technology democratizes the destruction of the world. When can a meme destroy the world? It kind of is already, right? Somewhere. I don't think I don't think we've seen anywhere near the worst of it yet. Well, it's going to get weird. Well, maybe a meme can save the world. We thought about that. The meme lord Elon Musk fighting on the side of good versus the the meme lord of the darkness, which is not saying any bad about Donald Trump, but he is the lord of the meme on the dark side. He's a Darth Vader of memes. I think in every fairy tale they always end it with and they lived happily ever after. And I'm like, please tell me more about this happily ever after. I've heard 50% of marriages end in divorce. Why doesn't your marriage end up there? You can't just say happily ever after. So the thing about destruction is it's over after the destruction. We have to do everything right in order to avoid it. And one thing wrong. I mean, actually this is what I really like about cryptography. Cryptography, it seems like we live in a world where the defense wins versus like nuclear weapons. The opposite is true. It is much easier to build a warhead that splits into a hundred little warheads than to build something that can take out a hundred little warheads. The offense has the advantage there. So maybe our future is in crypto. But so cryptography, right? The Goliath is the defense. And then all the different hackers are the David's and that equation is flipped for nuclear war. Because there's so many like one nuclear weapon destroys everything essentially. Yeah, and it is much easier to attack with a nuclear weapon than it is to like the technology required to intercept and destroy a rocket is much more complicated than the technology required to just you know orbital trajectory send a rocket to somebody. So okay, your intuition that the the war intelligence solutions out there, but it's very possible that they're no longer there. It's kind of a sad picture. They ender some steady state. They all wirehead themselves. What's wirehead? Stimulate stimulate their plighters centers. And just you know live forever in this kind of stasis. They become well, I mean, I think the reason I believe this is because where are they? If there's some reason they stopped expanding. So otherwise they would have taken over the universe. The universe isn't that big. Or at least you know, let's just talk about the galaxy, right? At 70,000 light years across. I took that number from Star Trek Voyager. I don't know how true it is, but um, yeah, that's not big. All right, 70,000 light years is nothing. For some possible technology that you can imagine that the leverage like wormholes or something like that. Or you don't even need wormholes. Just if on Newman probe is enough. Of on Newman probe and a million years of sublight travel and you'd have taken over the whole universe that clearly didn't happen. So something stopped it. So you mean if you, right, for like a few million years, if you sent out probes that travel close, what's sublight? Meaning close to this beta light. What's that point one say? And it just spreads interesting. Actually, that's an interesting calculation. Huh. So what makes you think that we'd be able to communicate with them? Like, uh, yeah, what's why do you think we would be able to be able to comprehend intelligent lives that are out there? Like even if they were among us kind of thing, like, or even just flying around. Well, I mean, that's possible. It's possible that there is some sort of prime directive. That'd be a really cool universe to live in. And there's some reason they're not making themselves visible to us. But it makes sense that they would use the same, well, at least the same entropy. Well, you're implying the same laws of physics. I don't know what you mean by entropy in this case. Oh, yeah. I mean, if entropy is the scarce resource in the universe, so what do you think about like Stephen Wolf from and everything is a computation? And then what if they are traveling through this world of computation? So if you think of the universe as just information processing, then what would you refer into with entropy? And then these pockets of interesting complex computations swimming around, how do we know they're not already here? How do how do we know that this like all the different amazing things that are full of mystery on earth are just like little footprints of intelligence from light years away? Maybe. I mean, I tend to think that as civilizations expand, they use more and more energy. And you can never overcome the problem of waste heat. So where is their waste heat? So we'd be able to, without crude methods, be able to see like there's a whole lot of energy here. But it could be something we're not, I mean, we don't understand dark energy, right? Dark matter. It could be just stuff we don't understand at all. They can have a fundamentally different physics, you know, like that we just don't even come around. Well, I think, okay, I mean, it depends how far out you want to go. I don't think physics is very different on the other side of the galaxy. I would suspect that they have, I mean, if they're in our universe, they have the same physics. Well, yeah, that's the assumption we have, but there could be like super trippy things like like our cognition only gets to a slice and all the possible instruments that we can design only get to a particular slice of the universe. And there's something much like weirder. Maybe we can try a thought experiment. Would people from the past be able to detect their remnants of our, we'll be able to detect our modern civilization? I think the answer is obviously yes. You mean past from a hundred years ago? Well, it's even going back further. Let's go to a million years ago. Right, the humans who were lying around in the desert probably didn't even have, maybe they just barely had fire. They would understand of a 747 flu overhead. Oh, in this vicinity, but not if a 747 flu on Mars, because they wouldn't be able to see far, because we're not actually communicating that well with the rest of the universe. We're doing okay, just sending out random like 50s tracks of music. True. And yeah, I mean, they'd have to, you know, we've only been broadcasting radio waves for a hundred, fifty years, and there's your light cone. So yeah, okay. What do you make about all the, recently, I came across this, having talked to David Fraver, I don't know if you caught what the videos that Pentagon released, and the New York Times reporting of the UFO sightings. So I kind of looked into it, quote unquote, and there's actually been like hundreds of thousands of UFO sightings, right? And a lot of it, you can explain the way in different kinds of ways. So one is it could be interesting physical phenomena, two, it could be people wanting to believe. And therefore, they conjure up a lot of different things that just, you know, when you see different kinds of lights, some basic physics phenomena, and then you just conjure up ideas of possible out there mysterious worlds. But, you know, it's also possible like you have a case of David Fraver, who is a Navy pilot, who's, you know, a legit as a guest in terms of humans who are able to perceive things in the environment and make conclusions whether those things are thread or not. And he and several other pilots saw a thing, I don't know if you follow this, but they saw a thing that they've since then called TikTok that moved in all kinds of weird ways. They don't know what it is. It could be technology developed by by the United States, and they're just not aware of it and the surface level from the Navy, right? It could be different kind of lighting technology or drone technology, all that kind of stuff. It could be the Russians and the Chinese, all that kind of stuff. And of course, their mind, our mind can also venture into the possibility that it's from another world. Have you looked into this at all? What do you think about it? I think all the news is a sly op. I think that the most- Nothing is real. Yeah, I listened to the, I think it was Bob Lazar, on Joe Rogan. And like, I believe everything this guy is saying. And then I think that it's probably just some like MK Ultra kind of thing, you know. What do you mean? Like, they, they, you know, they made some weird thing and they called it nailing spaceship. You know, maybe it was just to like stimulate young physicist's minds and tell them it's alien technology. And we'll see what they come up with, right? Do you find any conspiracy theories compelling? Like, have you pulled at the string of the of the rich complex world of conspiracy theories that's out there? I think that I've heard a conspiracy theory that conspiracy theories were invented by the CIA in the 60s to discredit true things. Yeah. So, you know, you can go to ridiculous conspiracy theories like flatter than Pizzagate. And, you know, these things are almost to hide like conspiracy theories that like, you know, remember when the Chinese like locked up the doctors who discovered coronavirus? Like, I tell people to have said, I'm like, no, no, that's not a conspiracy theory. That actually happened. Do you remember the time that the money used to be backed by gold and now it's backed by nothing? This is not a conspiracy theory. This actually happened. Well, that's one of my worries today with the idea of fake news is that when nothing is real, then like, you dilute the possibility of anything being true by conjuring up all kinds of conspiracy theories. And then you don't know what to believe. And then like the idea of truth of objectivity is lost completely. Everybody has their own truth. So, you're used to control information by censoring it. Then the internet happened and governments were like, oh shit, we can't censor things anymore. I know what we'll do. You know, it's the old story of the story of like, tying a flag with a leprechaun tells you his gold is buried and you tie one flag and you make the leprechaun swear to not remove the flag and you come back to the field later with a shovel and this flag is everywhere. That's one way to maintain privacy, right? It's like, in order to protect the contents of this conversation, for example, we could just generate like millions of deep fake conversations where you and I talk and say random things. So, this is just one of them and nobody knows which one was the real one. This could be fake right now. Classic secondography technique. Okay, another absurd question about intelligent life because you know, you're an incredible programmer outside of everything else we'll talk about just as a programmer. Do you think intelligent beings out there, the civilizations that were out there had computers and programming? Did they, doing naturally, have to develop something where we engineer machines and are able to encode both knowledge into those machines and instructions that process that knowledge, process that information to make decisions and actions and so on. And would those programming languages, if you think they exist, be it all similar to anything we've developed? So, I don't see that much of a difference between, quote unquote, natural languages and programming languages. I think there's so many similarities. So, when asked the question, what do alien languages look like? I imagine they're not all that dissimilar from hours and I think translating in and out of them wouldn't be that crazy. It was difficult to compile like DNA to Python and then to see, there's a little bit of a gap in the kind of languages we use for for touring machines and the kind of languages nature seems to use a little bit. Maybe that's just we just haven't understood the kind of language that nature uses as well yet. DNA is a CAD model. It's not quite a programming language. It has no sort of serial execution. It's not quite a, yeah, it's a CAD model. So, I think in that sense, we actually completely understand it. The problem is, well, simulating on these CAD models. I played with it a bit this year. It's super computationally intensive. If you want to go down to the molecular level, where you need to go to see a lot of these phenomena, like protein folding. So, yeah, it's not that it's not, it's not that we don't understand it. It just requires a whole lot of compute to kind of compile it. For human minds, it's inefficient both for the program, for the data representation and for the programming. It runs well on raw nature. It runs well on raw nature. And when we try to build emulators or simulators for that, well, the mad slow, I'd have tried it. It runs in, yeah, you've commented elsewhere. I don't remember where that one of the problems is simulating nature is tough. And if you want to sort of deploy a prototype, I forgot how you put it, but it made me laugh. But animals or humans who would need to be involved in order to try to run some prototype code. Like if we're talking about COVID and viruses and so on, if you were trying to engineer some kind of defense mechanisms, like a vaccine against COVID or all that kind of stuff, that doing any kind of experimentation, like you can with autonomous vehicles would be very technically and ethically costly. I'm not sure about that. I think you can do tons of crazy biology and test tubes, I think my bigger complaint is more, all the tools are so bad. Like literally, you mean like, like, like, I'm not brazen. I'm not pipetting shit. Like your hand in me, I got to, no, no, no, there has to be some like automating stuff. And like the human biology is messy. I guess, you look like look at those terranos videos. They were joke. It's like, it's like a little gantry. It's like a little x y gantry high school science project with the pipette. Like, really? Got to be something better. You can't build like nice microfluidics and I can program the, you know, computation to buy it interface. I mean, this is going to happen. But like right now, if you are asking me to pipette 50 milliliters of solution amount, this is so crude. Yeah. Okay. Let's get all the crazy out of the way. So a bunch of people asked me since we talked about the simulation last time. We talked about hacking the simulation. Do you have any updates? Any insights about how we might be able to go about hacking simulation if we indeed do live in a simulation? I think a lot of people misinterpreted the point of that South by talk. The point of the South by talk was not literally to hack the simulation. I think that this, we, this is, this is an idea is literally just, I think theoretical physics. I think that's the whole, you know, the whole goal. You want your grand unified theory, but then, okay, build a grand unified theory search for exploits. I think we're nowhere near actually there yet. My hope with that was just more to like, like, are you people kidding me with the things you spend time thinking about? Do you understand, like kind of how small you are? You are, you are bites and God's computer, really? And the things that people get worked up about and, you know, so basically it was more a message of we should humble ourselves that we get to like what, what are we humans in this byte code? Yeah. And not just humble ourselves, but like, like, I'm not trying to like make beautiful guilty or anything like that. I'm trying to say like literally look at what you are spending time on, right? What are your referent to your referent to the Kardashians? What are we talking about? I prefer to know the Kardashians. You know, everyone knows that's kind of fun. I'm referring more to like the economy, you know, this idea that we got up our stock price, like, or what is the goal function of humanity? You don't like the game of capitalism. Like, you don't like the games we've constructed for ourselves as humans? I'm a big fan of capitalism. I don't think that's really the game we're playing right now. I think we're playing a different game where the rules are rigged. Okay, which games are interesting to you that we humans have constructed and which aren't, which are productive and which are not actually maybe that's the real point of the of the talk. It's like, stop playing these fake human games. There's a real game here. We can play the real game. The real game is, you know, nature wrote the rules. This is a real game. There still is a game to play. But if you look at Sargentrop, I don't know if you've seen Instagram account, nature is metal. The game that nature seems to be playing is a lot, a lot more cruel than we humans want to put up with. Or at least we see it as cruel. It's like the bigger thing eats the smaller thing and does it to impress another big thing so it can mate with that thing and that's it. That seems to be the entirety of it. Well, there's no art, there's no music, there's no comma AI, there's no comma one, no comma two, no George Hots with his brilliant talks at Southwest. I disagree though. I disagree that this is what nature is. I think nature just provided basically a open world and MMO RPG. And you know, here it's open world. I mean, if that's the game you want to play, you can play that game. It's not beautiful. I know if you play Diablo, they used to have, I think, cow level where it's, so everybody will go just, they figured out this like the best way to gain experience points is to just slaughter cows over and over and over. And so they figured out this little sub-game within the bigger game that this is the most efficient way to get experience points and everybody somehow agreed to getting experience points in RPG context where you always want to be getting more stuff, more skills, more levels, keep advancing. That seems to be good. So might as well spend sacrifice actual enjoyment of playing a game exploring a world and spending like hundreds of hours of your time in cow level. I mean, the number of hours I spent in cow level, I'm not like the most impressive person because people have probably thousands of hours there, which is ridiculous. So that's a little absurd game that brought me joints when we are dopamine drug kind of way. So you don't like those games. You don't think that's us humans feeling the nature. And that was the point of the talk. Yeah. So how do we hack it then? Well, I want to live forever. And wait, I want to live forever. And this is like the goal. Well, that's a game against nature. Yeah. Immortality is the good objective function to you. I mean, start there and then you can do whatever else you want because you've got a long time. What if immortality makes the game just totally not fun? I mean, like, why do you assume immortality is somehow it's not a good objective function? It's not immortality that I want. A true immortality where I could not die. I would prefer what we have right now. But I want to choose my own death, of course. I don't want nature to decide when I die. I'm going to win. I'm going to be you. And then at some point, if you choose commit suicide, like how long you think you'd live? I think it's like a board. See, I don't think people like in like brilliant people like you that really ponder living a long time are really considering how how meaningless life becomes. Well, I want to know everything and then I'm ready to die. As long as you're just... Why do you want? Isn't it possible that you want to know everything because it's finite? The reason you want to know, quote unquote, everything is because you don't have enough time to know everything. And once you have unlimited time, then you realize why do anything? Why learn anything? I don't want to know everything and then I'm ready to die. See, yeah. It's a terminal value. It's not in service of anything else. I'm conscious of the possibility. This is not a certainty, but the possibility of that engine of curiosity that you're speaking to is actually a symptom of the finiteness of life. Like without that finiteness, you curiosity would vanish. Like a morning fog. All right, cool. Then let me solve immortality and let me change the thing in my brain that reminds me of the fact that I'm immortal tells me that life is finite shit. Maybe I'll have it tell me that life ends next week. All right? I'm okay with some self manipulation like that. I'm okay with deceiving. Oh, Rika. Changing the code. Yeah, we know if that's the problem, right? If the problem is that I will no longer have that that curiosity, I'd like to have backup copies of myself. Which I check in with occasionally to make sure they're okay with the trajectory and they can kind of override it. Maybe a nice like I think of like those wave nets as like logarithmic go back to the copies. But sometimes it's not reversible. Like I've done this with video games. Once you figure out the cheat code or like you look up how to cheat old school like single player, it ruins the game for you. Absolutely. I know that feeling, but again, that just means our brain manipulation technology is not good enough yet. Remove that cheat code from your brain here. What if we, so it's also possible that if we figure out immortality, that all of us will kill ourselves before we advance far enough to be able to revert the change. I'm not killing myself till I know everything. So that's what you say now because your life is finite. You know, I think guess self modifying systems gets comes up with all these hairy complexities. And can I promise that I'll do it perfectly? No. But I think I can put good safety structures in place. So that talk in your thinking here is not literally referring to a simulation in that our universe is a kind of computer program running in a computer. That's more of a thought experiment. Do you also think of the potential of the sort of of a boss drum, Elon Musk, and others that talk about an actual program that simulates our universe? Oh, I don't doubt that we're in a simulation. I just think that it's not quite that important. I mean, I'm interested only in simulation theory as far as like it gives me power over nature. If it's totally unfalseifiable, then who cares? I mean, what do you think that experiment would look like? Like somebody on Twitter asks George what signs we would look for to know whether or not we're in simulation, which is exactly what you're asking is like the step that precedes the step of knowing how to get more power from this knowledge is to get an indication that there's some power to be gained. So get an indication that there you can discover and exploit cracks in the simulation. Or it doesn't have to be in the physics of the universe. Yeah. Show me, I mean, like a memory leak could be cool. Some scrying technology, you know, what kind of technology? Scrying. What's that? Oh, that's a weird, uh, scrying is the is the uh, paranormal ability to like, like remote viewing, like being able to see somewhere where you're not. Um, so, you know, I don't think you can do it by chanting in a room, but, um, if we could find as a memory leak, basically. So memory leak, yeah, you're able to access parts you're not supposed to. Yeah, yeah, yeah, yeah. And thereby discover shortcut. Yeah, maybe memory leak means the other thing as well, but I mean, like, yeah, like an ability to read arbitrary memory. Yeah. Right. Um, and that one's not that horrifying, right? The, the right ones start to be horrifying. Read it, right? So just the reading is not the problem. Yeah, it's like heart-fleet for the universe. Oh boy, the writing is a big, big problem. It's a big problem. It's the moment you can write anything, even if it's just random noise. That's terrifying. I mean, even without, even without that, like even some of the, you know, the nanotech stuff that's coming, I think this. I don't know if you're paying attention, but actually, Eric Weissthun came out with the theory of everything. I mean, that came out. He's been working on a theory of everything in the physics world called geometricunity. And then for me, from computer science person, like you, Steven Wolfram's theory of everything of like hypergraphs, this super interesting and beautiful. But that not from a physics perspective, but from a computational perspective. I don't know, have you paid attention to any of that? So again, like, what would make me pay attention? And like, why like a hate string theory is, okay, make a testable prediction, right? I'm only interested in, I'm not interested in theories for their intrinsic beauty. I'm interested in theories that give me power over the universe. So if these theories do, I'm very interested. Can I just say how beautiful that is because a lot of physicists say I'm interested in experimental validation. And they skip out the part where they say to give me more power in the universe. I just love the, you know, I want, I want, I want the clarity of that. I want 100 gigahertz processors. I want transistors that are smaller than atoms. I want like power. That's, that's true. And that's where people from aliens to this kind of technology where people are worried that governments, like who owns that power? Is it George Hots? Is it thousands of distributed hackers across the world? Is it governments? You know, is it Mark Zuckerberg? There's a lot of people that, I don't know if anyone trusts anyone individual with power. So they're always worried. It's the beauty of blockchains. That's the beauty of blockchains, which we'll talk about. On Twitter, somebody pointed me to a story, a bunch of people pointed me to a story a few months ago where you went into a restaurant in New York and you can correct me if I'm not wrong. And ran into a bunch of folks from a company in a crypto company who are trying to scale a Ethereum. And they had a technical deadline related to a solidity to OVM compiler. So these are all Ethereum technologies. So you stepped in. They recognized you pulled your side, explained their problem and you stepped in and helped them solve the problem. They're by creating legend status story. So can you tell me the story, the little more detail, it seems kind of incredible. Did this happen? Yeah, it's a true story. I mean, they wrote a very flattering account of it. So optimism is the company's called optimism, spin off of plasma. They're trying to build L2 solutions on Ethereum. So right now, every Ethereum node has to run every transaction on the Ethereum network. And this kind of doesn't scale, because if you have N computers, well, if that becomes to N computers, you actually still get the same amount of compute. This is like all of one scaling. Because they all have to run it. Okay, fine, you get more blockchain security, but like, blockchain is already so secure. Can we trade some of that off for speed? So that's kind of what these L2 solutions are. They built this thing, which kind of sandbox for Ethereum contracts, so they can run it in this L2 world and it can't do certain things in L world. In L1, I guess you for some definitions, what's L2? Oh, L2 is layer two. So L1 is like the base Ethereum chain. And then layer two is like a computational layer that runs elsewhere, but still is kind of secured by layer one. And I'm sure a lot of people know, but Ethereum is a cryptocurrency, probably one of the most popular cryptocurrency, second to Bitcoin. And a lot of interesting technological innovations there. Maybe you can also slip in whenever you talk about things that are exciting to you in the Ethereum space. And why Ethereum? Well, Bitcoin is not term complete. Ethereum is not technically term complete with the gas limit, but close enough. With the gas limit. What's the gas limit? Resources? Yeah, no computers actually term complete. You're fun at RAM. You know, guys, I can actually solve the problem. With the word gas limit, you just have so many brilliant words. I'm not even going to ask. What that's what that's, no, that's not my word. That's Ethereum's word. Gas limit. Ethereum, you have to spend gas per instruction. So like different op codes use different amounts of gas. And you buy gas with ether to prevent people from basically dedicating the network. So Bitcoin is proof of work. And then what's Ethereum? It's also proof of work. They're working on some proof of stake Ethereum 2.0 stuff. But right now it's it's proof of work. It uses a different hash function from Bitcoin. That's more asick resistance because you need RAM. So we're all talking about Ethereum at one point so what what were they trying to do to scale this whole process? So they were like, well, if we could run contracts elsewhere, I mean, then only save the results of that computation. You know, but we don't actually have to do the compute on the chain. We can do the compute off chain and just post what the results are. Now the problem with that is well, somebody could lie about what the results are. So you need a resolution mechanism. And the resolution mechanism can be really expensive because you know, you just have to make sure that like the person who is saying, look, I swear that this is the real computation. I'm staking $10,000 on that fact. And if you prove it wrong, yeah, my cost to $3,000 in gas fees to prove wrong, but you'll get the $10,000 bounty. So you can secure using those kind of systems. So it's effectively a sandbox which runs contracts. And like just like any kind of normal sandbox, you have to like replace syscalls with calls into the hypervisor. Sandbox, syscalls, hypervisor, what do these things mean? As long as it's interesting to talk about. Yeah, I mean, you can take like the Chrome sandboxes, maybe the one to think about, right? So the Chrome process is doing a rendering. A camp for example, a redevelopment file system. Yeah. It has, if it tries to make an open syscalls in Linux, the open syscalls, you can't make it open syscalls. No, no, no, you have to request from the kind of hypervisor process or like, I don't know what's calling Chrome, but the could you, hey, could you open this file for me? And then it does all these checks and then it passes the file handle back in if it's proved. So that's yeah. So what's the in the context of Ethereum? What are the boundaries of the sandbox that we're talking about? Well, one of the calls that you actually reading, writing any state to the Ethereum contract, to the Ethereum blockchain, writing state is one of those calls that you're going to have to sandbox in layer two, because if you let layer two just arbitrarily, right, to be Ethereum blockchain. So layer two is really sitting on top of layer one. So you're going to have a lot of different kinds of ideas that you can play with. Yeah. And they're all, they're not fundamentally changing the source code level of Ethereum. Well, you have to replace a bunch of calls with calls into the hypervisor. So instead of doing the syscalls directly, you replace it with a call to the hypervisor. So originally they were doing this by first running the solidity as the language that most of the Ethereum contracts are written in and composed to a bytecode. And then they wrote this thing they called the transpiler. And the transpiler took the bytecode and it transpiled it into OVM safe bytecode. Basically, bytecode that didn't make any of those restricted syscalls and added the calls to the hypervisor. This transpiler was a 3,000 line mess. And it's hard to do. It's hard to do if you're trying to do it like that because you have to kind of like deconstruct the bytecode, change things about it and then reconstruct it. And I mean, as soon as I hear this, I'm like, well, why don't you just change the compiler? All right. Why not? The first place you build the bytecode, just do it in the compiler. So yeah, you know, I asked them how much they wanted it. Of course, measured in dollars and I'm going, oh, okay. And yeah, you wrote the compiler. I modified. I wrote a 300 line diff to the compiler. It's a one source. You can look at it. Yeah, it's, yeah, I looked at the code last night. That's it's, yeah, exactly. Cutes. Cutes is a good word for it. And it's C++. So when asked how you were able to do it, you said, you just got to think and then do it right. So can you break that apart a little bit? What's your process of one thinking into doing it right? You know, they, they, they, people I was working for are amused that I said that it doesn't really mean anything. Okay. I mean, is there some deep profound insights to draw from like how you problem solve from that? This is always what I say. I'm like, do you want to be a good programmer? Do it for 20 years? Yeah. There's no shortcuts. Yeah. Yeah. What are your thoughts on crypto in general? So what, what parts technically or philosophical could you find, especially beautiful maybe? Oh, I'm, I'm extremely bullish on crypto, long term, not any specific crypto project, but this idea of well, two ideas. One, the Nakamoto consensus algorithm is I think one of the greatest innovations of the 21st century. This idea that people can reach consensus, you can reach a group consensus using a relatively straightforward algorithm is wild. And like, you know, it's the totally Nakamoto people always ask me who I look up to. It's like, whoever that is. Who do you think it is? I mean, I'm a Elon Musk. Is it you? It is definitely not me. And I do not think it's Elon Musk. But yeah, this idea of our groups reaching consensus in a decentralized yet formulaic way is one extremely powerful idea from crypto. Maybe the second idea is this idea of smart contracts. When you read a contract between two parties, any contract, this contract, if there are disputes, it's interpreted by lawyers. Lawyers are just really shitty overpaid interpreters. Imagine you had, let's talk about them in terms of A in terms of like, let's compare a lawyer to Python, right? So lawyer, well, okay. That's really, I never thought of it that way. It's hilarious. So Python, I'm paying, I'm paying, I'm, you know, even 10 cents an hour, I'll use the nice Azure machine. I can run Python for 10 cents an hour. Lawyers cost $1,000 an hour. So Python is 10,000x better on that access. Lawyers don't always return the same answer. Python almost always does. Cost. Yeah, I mean, just just cost, reliability, everything about Python is so much better than lawyers. So if you can make smart contracts, this whole concept of code is law. I love, and I would love to live in a world where everybody accepted that fact. So maybe you can talk about what smart contracts are. So let's say, let's say, you know, we have a, even something as simple as a safety deposit box, safety deposit box that holds a million dollars. I have a contract with the bank that says, two out of these three parties must be present to open the safety deposit box and get the money out. So that's a contract with the bank, and it's only as good as the bank and the lawyers, right? Let's say, you know, somebody dies. And now we're going to go through a big legal dispute about whether, oh, well, was it in the will? Was it not in the will? Well, what, like, it's just so messy. And the cost to determine truth is so expensive versus a smart contract, which just uses cryptography to check if two out of three keys are present. Well, I can look at that. And I can have certainty in the answer that it's going to return. And that's what all businesses want, a certainty. You know, they say businesses don't care, biocom YouTube, YouTube's like, look, we don't care which way this lawsuit goes. Just please tell us so we can have certainty. I wonder how many agreements in this world, because we're talking about financial transactions only in this case, correct? The smart contracts. Oh, you can go to anything. You can go, you could print up in the theory blockchain. Merit smart contracts. Sorry, divorce lawyers. Sorry. You're going to be replaced by Python. Okay. So that's, so though, that's another beautiful idea. Do you think there's something that's appealing to you about any one specific implementation? So if you look 10, 20, 50 years done line, do you see any like Bitcoin, Ethereum, any of the other hundreds of cryptocurrencies winning out? Is there like what's your intuition about the space? Are you just sitting back and watching the chaos and who cares what emerges? Oh, I don't, I don't expect it. I don't really care. I don't really care which one of these projects wins. I'm kind of in the Bitcoin as a meme coin camp. I mean, why does Bitcoin have value? It's technically kind of, you know, what? Yeah. Not great. Like the block size debate or what I found out what the block size debate was. I'm like, are you guys kidding? What's the block size debate? You know what? It's really stupid to even talk to people. People can look it up, but I'm like, wow, you know, Ethereum seems the governance of Ethereum seems much better. I've come around, I've been on proof of stake ideas. You know, very smart people thinking about some things. Yeah. You know, governance is interesting. It does feel like Vitalik, like it does feel like an open and even in these distributed systems, leaders are helpful because they kind of help you drive the mission and the vision and they put a face to a project. It's a weird thing about us humans. Geniuses are helpful. Like the tap. Yeah. Brilliant. I mean, leaders are not necessarily. Yeah. So you think the reason he's the face of Ethereum is because he's a genius. That's interesting. I mean, that was, it's interesting to think about that we need to create systems in which the quote unquote leaders that emerge are the geniuses in the system. I mean, that's arguably why the current state of democracy is broken is the people who are emerging as the leaders are not the most competent, are not the superstars of the system. And it seems like at least for now in the crypto world, oftentimes the leaders are the superstars. Imagine at the debate they asked, what's the sixth amendment? What are the four fundamental forces in the universe? What's the integral of two to the X? Yeah. I'd love to see those questions and that's what I want as our leader. It's a little bit of a baseball. Yeah. I mean, even, oh, wow, you're hurting my brain. It's that my standard was even lower, but I would have loved to see just this basic brilliance. Like I've talked to historians. There's just these, they're not even like they don't have a PhD or even an education history. They're just like a Dan Carlin type character who just like, holy shit, how did all this information get into your head? They're able to just connect Genghis Khan to the entirety of the history of the 20th century. They know everything about every single battle that happened. And they know the like the game of thrones of the different power plays and all that happened there. And they know like the individuals and all the documents involved. And they integrate that into their regular life. It's not like they're ultra history nerds. They're just, they know this information. That's what competence looks like. Yeah. Because I've seen that with programmers too. That's what great programmers do. But yeah, it would be really unfortunate that those kinds of people aren't emerging as our leaders. But for now, at least in the crypto world, that seems to be the case. I don't know if that always, you could imagine that in 100 years, that's not the case. Right. Crypto world has one very powerful idea going for it. And that's the idea of Forks. I mean, you know, imagine, we'll use a less controversial example. This was actually in my joke app in 2012. I was like Barack Obama. It Romney. Let's let him both be present. I like imagine we could fork America and just let him both be present. And then the Americas could compete. And you know, people could invest in one, pull their liquidity out of one, put it in the other. You have this in the crypto world, Ethereum Forks into Ethereum and Ethereum Classic. And you can pull your liquidity out of one and put it in another. And people vote with their dollars, which Forks companies should be able to fork. I'd love to fork and video. You know. Yeah. Like different business strategies. And then try them out and see what works. Like even take yeah, take comma AI that closes its source and then take one that's open source and see what works. Take one that's purchased by GM and one that remains Android Renegade and all these different versions and see the beauty of comma AI or someone can actually do that. Yeah. Please take comma AI and fork it. That's right. That's the beauty of open source. So you're, I mean, we'll talk about autonomous vehicle space, but it does seem that you're really knowledgeable about a lot of different topics. So the natural question of a bunch of people ask this, which is how do you keep learning new things? Do you have like practical advice if you're into introspect like taking notes, allocate time or do you just mess around and just allow your curiosity to drive? I'll write these people a self-help book and I'll charge $67 for it. And I will write. I will write. I will write on the cover of the self-help book. All of this advice is completely meaningless. You're going to be a sucker and buy this book anyway. And the one lesson that I hope they take away from the book is that I can't give you a meaningful answer. That's interesting. Let me translate that as you haven't really thought about what it is you do systematically because you could reduce it. And then some people, I mean, I've met brilliant people that, I mean, this is really clear with athletes. Some are just, you know, the best in the world that's something. And they have zero interest in writing a self-help book or how to master this game. And then there's some athletes who become great coaches and they love the analysis, perhaps the overanalysis. And you right now, at least at your age, which is an interesting, you're in the middle of the battle. You're like the warriors that have zero interest in writing books. So you're in the middle of the battle. So you have, yeah. This is a fair point. I do think I have a certain aversion to this kind of deliberate, intentional way of living life. You're eventually the hilarity of this, especially since this is recorded. It will reveal beautifully the absurdity when you finally do publish this book that guarantee you you will. The story of comma AI will be, maybe it'll be a biography written about you. They'll be, they'll be better, I guess. And you might be able to learn some cute lessons if you're starting a company like comma AI from that book. But if you're asking generic questions like how do I be good at things? Dude, I don't know. Well, I mean, the interesting thing. Do them a lot. Do them a lot. But the interesting thing here is learning things outside of your current trajectory, which is what it feels like from an outsider's perspective. I mean, that, I don't know if there's a device on that, but it is an interesting curiosity when you become really busy. You're running a company. Yeah. But like there's a natural inclination and trend. Like just the momentum of life carries you into a particular direction of wanting to focus. And this kind of dispersion that curiosity can lead to gets harder and harder with time. Because you get really good at certain things. And it sucks trying things that you're not good at, like trying to figure them out. You do this with your life streams. You're on the fly figuring stuff out. You don't mind looking dumb. No. You just figured out, figured out pretty quickly. Sometimes I try things and I don't figure out quickly. My chest rating is like a 1,400. Despite putting like a couple hundred hours in it's pathetic. I mean, to be fair, I know that I could do it better. If I did it better, like, don't play, you know, don't play five minute games, play 15 minute games at least. Like, I know these things, but it just doesn't. It doesn't stick nicely in my knowledge. All right. Let's talk about Kamaeai. What's the mission of the company? Let's like look at the biggest picture. Oh, I have an exact statement. Solve self-driving cars while delivering shipable intermediaries. So long term vision is have fully autonomous vehicles and make sure you make money along the way. I think it doesn't really speak to money, but I can talk about what Solve self-driving cars means. Solve self-driving cars, of course, means you're not building a new car, you're building a person replacement, that person can sit in the driver's seat and drive you anywhere a person can drive with a human or better level of safety, speed, quality comfort. And what's the second part of that? Delivering shipable intermediaries. Is well, it's a way to fund the company. That's true. But it's also a way to keep us honest. If you don't have that, it is very easy with this technology to think you're making progress when you're not. I've heard it best described on hacker news as you can set any arbitrary milestone. Meet that milestone and still be infinitely far away from solving self-driving cars. So it's hard to have like real deadlines when you're like crews or waymo when you don't have revenue. Is that? I mean, is revenue essentially the thing we're talking about here? Revenue is capitalism is based around consent. Capitalism, the way that you get revenue is a real capitalism. Commas in the real capitalism camp. There's definitely scams out there. But real capitalism is based around consent. It's based around this idea that like if we're getting revenue, it's because we're providing at least that much value to another person. When someone buys a thousand dollar comma two from us, we're providing them at least a thousand dollars of value where they wouldn't buy it. Brilliant. So can you give a world-wend overview of the products that Kamei provides throughout its history and today? I mean, yeah, the past ones aren't really that interesting. It's kind of just been refinement of the same idea. The real only product we sell today is the comma two. Which is a piece of hardware with cameras. So the comma two, I mean, you can think about it kind of like a person. You know, in future hardware, it will probably be even more and more a person like. So it has eyes, ears, a mouth, a brain, any way to interface with the car. Does it have consciousness? Just kidding. That was a trick question. I don't have consciousness either. Me and the comma two are the same. You're the same. I have a little more compute than it. It only has like the same compute as interesting. Be you know. You're more efficient energy wise for the compute you're doing far more efficient energy wise. 20 paid of lots, 20 wants. Are you lack consciousness? Sure. Do you fear death? You do. You want immortality? Or is that fear death? Does Kamei I fear death? I don't think so. Of course it does. It very much fears well. Fear is negative loss. Oh yeah. Oh. Okay. So comma two, when that that come out that was a year ago? No, two. Early this year. Wow. Time. It feels like yeah. 2020 feels like it's taken 10 years to get to the end. It's a long year. It's a long year. So what's the sexiest thing about comma to feature wise? So maybe you can also linger on like what is it? Like what's its purpose? Because there's a hardware. There's a software component. You've mentioned the sensors, but also like what are the features and capabilities? I think our slogan summarizes it well. Come a slogan is make driving chill. I love it. Okay. Yeah. I mean it is. You know, if you like cruise control, imagine cruise control, but much, much more. So it can do adaptive cruise control things, which is like slow down for cars in front of it. It may attain a certain speed. And it can also do lane keeping still staying in the lane and do it better and better and better over time. That's very much machine learning based. So this camera is there's a driver facing camera too. What else is there? What am I thinking? So the hardware versus software. So open pilot versus the actual hardware, the device. What's key draw that distinction? What's one of us? The other. I mean, the hardware is pretty much a cell phone with a few additions. A cell phone with a cooling system and with a car interface. Connecting to it. And as by cell phone, you mean a Qualcomm Snapdragon? Yeah, the current hardware is a Snapdragon 821. It has Wi-Fi radio. It has a military radio. It has a screen. We use every part of the cell phone. And then the interface with the car is specific to the car. So you keep supporting more and more cars. Yeah. So the interface to the car, I mean, the device itself just has four can buses. It has four can interfaces on it. They're connected through the USB port to the phone. And then yeah, on those four can buses, you connect it to the car and there's a little part to do this. Cars are actually surprisingly similar. So can is the protocol by which cars communicate. And then you're able to read stuff and write stuff to be able to control the car depending on the car. So what's the software set? What's open pilot? So I mean, open pilot is the hardware is pretty simple compared to open pilot, open pilot is. Well, so you have a machine learning model, which it's in open pilot. It's a blob. It's just blob of weights. It's not like people are like, oh, it's closed source. I'm like, what's a blob of weights? What do you expect? You know, just primarily neural network based. You well. Open pilot is all the software kind of around that neural network. That if you have a neural network that says, here's where you want to send the car, open pilot actually goes and executes all of that. It cleans up the input to the neural network. It cleans up the output and executes on it. So connects the glue that connects everything together. It runs the sensors. Does a bunch of calibration for the neural network does deals with like, you know, if the car is on a banked road, you have to counter steer against that. And the neural network can't necessarily know that by looking at the picture. So you do that with other sensors and fusion and localizer. Open pilot also is responsible for sending the data up to our servers so we can learn from it, logging it, recording it, running the cameras, thermally managing the device, managing the disk space and the device, managing all the resources and the device. So what since we last spoke, I don't remember one maybe a year ago, maybe a little bit longer. How has open pilot improved? We did exactly what I promised you. I promised you that by the end of the year, we would be able to remove the lanes. The lateral policy is now almost completely end to end. You can turn the lanes off and it will drive. Drive slightly worse on the highway if you turn the lanes off, but you can turn the lanes off and it will drive well trained completely end to end on user data. And this year we hope to do the same for the longitudinal policy. So that's an interesting thing is you're not doing, you don't appear to be, you can correct me, you don't appear to be doing lane detection or lane marking detection or kind of the segmentation task or any kind of object detection task. You're doing what's traditionally more called end to end learning. So entrained on actual behavior of drivers when they're driving the car manually. And this is hard to do. It's not supervised learning. Yeah, but so the nice thing is there's a lot of data. So it's hard and easy. A lot of high quality data. Like more than you need in the set. Well, we've way more than we do. We've way more data than we need. I mean, it's an interesting question actually because in terms of amount, you have more than you need. But the, you know, driving is full of edge cases. So how do you select the data you train on? I think this is an interesting open question. Like what's the clearest way to select data? That's the question. Tesla is probably working on. That's, I mean, the entirety of machine learning can be, they don't seem to really care. They just kind of select data. But I feel like that if you want to solve, if you want to create intelligent systems, you have to pick data well. Right. And so would you have any hints ideas of how to do it well? So in some ways, that is the definition I like of reinforcement learning versus supervised learning in supervised learning, the weights depend on the data. Right. And this is obviously true. But in reinforcement learning, the data depends on the weights. Yeah. And actually, both ways. That's poetry. So how does it know what data in China? Well, let it pick. We're not there yet, but that's the eventual. She's thinking this almost like a now reinforcement learning framework. We're going to do RL on the world. Every time a car makes a mistake, user disengages, we train on that and do RL on the world. Ship out a new model. That's an epoch, right? And for now, you're not doing the Elon style promising that it's going to be fully autonomous. You really are sticking to level two. And like it's supposed to be supervised. Oh, it is definitely supposed to be supervising, we enforce the fact that it's supervised. We look at our rate of improvement in disengagement. Open pilot now has an unplanned disengagement about every 100 miles. This is up from 10 miles. Like, maybe maybe a maybe a year ago. Yeah. So maybe we've seen 10x improvement in a year, but 100 miles is still a far cry from the 100,000 you're going to need. So you're going to somehow need to get three more 10xs in there. And you're what's your intuition? You're basically hoping that there's exponential improvement built into the baked into the cake somewhere. Well, that's even Dr. I mean, 10x improvement. That's already assuming exponential, right? There's definitely exponential improvement. And I think when Elon talks about exponential, like these things, these systems are going to exponentially improve. Just exponential doesn't mean you're getting 100 gigahertz processors tomorrow. Right? Like it's going to still take a while because the gap between even our best system and humans is still large. So that's an interesting distinction to draw out. So if you look at the way Tesla is approaching the problem and the way you're approaching the problem, which is very different than the rest of the self driving car world. So let's put them aside is you're treating most the driving tasks as a machine learning problem. And the way Tesla is approaching it is with the multitask learning, when you break the task of driving into hundreds of different tasks and you have this multi-headed network that's very good at performing each task. And there's presumably something on top that's stitching stuff together in order to make control decisions, policy decisions about how you move the car. But with that allows you, there's a brilliance to this because it allows you to master each task, like lane detection, stop sign detection, traffic light detection, drivable area segmentation, vehicle bicycle pedestrian detection, there's some localization tasks in there, also predicting
